[{"title":"python","date":"2022-03-02T06:37:17.120Z","url":"/2022/03/02/python/","content":"环境配置文件方法一 方法二 注意 encoding&#x3D;utf8 为使用utf8编码，不然可能会报UnicodeDecodeError: ‘gbk’ codec can’t decode byte 0xae in position 406: illegal multibyte sequence 的错误。force 强制执行，当生成目录下的requirements.txt存在时覆盖。"},{"title":"docker","date":"2022-03-02T06:10:25.000Z","url":"/2022/03/02/docker/","content":"Docker Docker介绍​ Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。 Docker的安装Windows上安装 Mac上安装 Linux上安装首先，卸载旧版本Docker的相关文件，例如docker,，docker.io, 或 docker-engine 更新apt包索引并安装包以允许apt通过 HTTPS 使用存储库 添加 Docker 的官方 GPG 密钥 使用以下命令设置稳定存储库。要添加 nightly或test存储库，请在以下命令中的单词之后添加单词nightly或test（或两者） 安装Docker 要安装特定版本的 Docker ![](images&#x2F;2022-02-22 09-16-44 的屏幕截图-16462016137492.png) 使用第二列中的版本字符串安装特定版本，例如：5:20.10.103-0ubuntu-focal 通过运行映像hello-world 来验证 Docker 引擎是否已正确安装 此命令下载测试映像并在容器中运行它。当容器运行时，它会打印一条消息并退出。 要升级 Docker Engine，首先运行sudo apt-get update，然后按照 安装说明，选择您要安装的新版本。 Docker的使用直接输入 docker 命令来查看到 Docker 客户端的所有命令选项 ![](images&#x2F;2022-02-22 09-35-10 的屏幕截图-16462016137493.png) 可以通过命令 docker command --help 更深入的了解指定的 Docker 命令使用方法 ![](images&#x2F;2022-02-22 10-08-15 的屏幕截图-16462016137494.png) Docker的镜像查询，也可在DockerHub上查询对镜像信息 ![](images&#x2F;2022-02-22 10-15-57 的屏幕截图-16462016137495.png) ![](images&#x2F;2022-02-22 10-11-31 的屏幕截图-16454959392092-16462016137496.png) 获取镜像 ![](images&#x2F;2022-02-22 10-19-54 的屏幕截图-16462016137497.png) 查看已有的Docker镜像 ![](images&#x2F;2022-02-22 11-29-21 的屏幕截图-16462016137498.png) 使用镜像创建容器 查看已有的容器 ![](images&#x2F;2022-02-22 11-34-46 的屏幕截图-16462016137499.png) 重启一个容器 ![](images&#x2F;2022-02-22 11-43-16 的屏幕截图-164620161374910.png) 停止一个容器 ![](images&#x2F;2022-02-22 11-44-28 的屏幕截图-164620161374911.png) 进入容器 退出容器后容器不停止 退出容器后容器会停止 容器制作成镜像 ![](images&#x2F;2022-02-22 15-40-04 的屏幕截图-164620161374912.png) 镜像导出 会在当前路径下生成一个commit-ubuntu-20.04.tar文件 ![](images&#x2F;2022-02-22 15-46-07 的屏幕截图-164620161374913.png) 可以通过export命令直接将容器导出 ![](images&#x2F;2022-02-22 15-56-44 的屏幕截图-164620161375014.png) 镜像导入 容器导入 Docker DockerfileDockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。 Dockerfile指令说明简洁版： FROM 构建镜像基于哪个镜像 MAINTAINER 镜像维护者姓名或邮箱地址 RUN 构建镜像时运行的指令 CMD 运行容器时执行的shell环境 VOLUME 指定容器挂载点到宿主机自动生成的目录或其他容器 USER 为RUN、CMD、和 ENTRYPOINT 执行命令指定运行用户 WORKDIR 为 RUN、CMD、ENTRYPOINT、COPY 和 ADD 设置工作目录，就是切换目录 HEALTHCHECH 健康检查 ARG 构建时指定的一些参数 EXPOSE 声明容器的服务端口（仅仅是声明） ENV 设置容器环境变量 ADD 拷贝文件或目录到容器中，如果是URL或压缩包便会自动下载或自动解压 COPY 拷贝文件或目录到容器中，跟ADD类似，但不具备自动下载或解压的功能 ENTRYPOINT 运行容器时执行的shell命令"},{"title":"Hello World","date":"2022-03-02T03:20:33.349Z","url":"/2022/03/02/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]